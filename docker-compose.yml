version: '3.8'

services:
  # Service MongoDB
  mongodb:
    image: mongo:latest
    container_name: dtahc-mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-dtahc}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - dtahc-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/dtahc --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Service Redis pour cache et pub/sub
  redis:
    image: redis:alpine
    container_name: dtahc-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dtahc-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service backend (API Node.js)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dtahc-backend
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3000
      - MONGO_URI=mongodb://${MONGO_USERNAME:-root}:${MONGO_PASSWORD:-password}@mongodb:27017/${MONGO_DATABASE:-dtahc}?authSource=admin
      - REDIS_URI=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    ports:
      - "3000:3000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - dtahc-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Service NGINX pour le reverse proxy
  nginx:
    image: nginx:alpine
    container_name: dtahc-nginx
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./public:/usr/share/nginx/html:ro
    networks:
      - dtahc-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  dtahc-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
  uploads_data: